import patternMatchesString from '../../../src/commands-utils/patternMatchesString'

describe('patternMatchesString', () => {
  function testCase(pattern, channel, expected) {
    it(`${pattern} ${expected ? 'matches' : "doesn't match"} ${channel}`, () =>
      expect(patternMatchesString(pattern, channel)).toBe(expected))
  }
  testCase('\\*', '*', true)
  testCase('\\?', '?', true)
  testCase('\\[', '[', true)
  testCase('\\]', ']', true)
  testCase('\\*', 'a', false)
  testCase('\\?', 'a', false)
  testCase('\\[', 'a', false)
  testCase('\\]', 'a', false)
  testCase('\\*', '', false)
  testCase('\\?', '', false)
  testCase('\\[', '', false)
  testCase('\\]', '', false)
  testCase('\\*', 'aa', false)
  testCase('\\?', 'aa', false)
  testCase('\\[', 'aa', false)
  testCase('\\]', 'aa', false)
  testCase('foo*bar', 'foobazbar', true)
  testCase('foo*bar', 'foobazcar', false)
  testCase('foo*bar', 'foobazba', false)
  testCase('foo*bar', 'foobar', true)
  testCase('foo*bar', 'foocar', false)
  testCase('foo*bar', 'fooba', false)
  testCase('*', 'a', true)
  testCase('*', 'ab', true)
  testCase('?', 'a', true)
  testCase('?', 'b', true)
  testCase('?', 'ab', false)
  testCase('?', '', false)
  testCase('[ab]', 'a', true)
  testCase('[ab]', 'b', true)
  testCase('[ab]', 'c', false)
  testCase('[\\]ab]', ']', true)
  testCase('[\\]ab]', 'a', true)
  testCase('[\\]ab]', 'b', true)
  testCase('[\\]ab]', 'c', false)
  testCase('[^a-c]', 'd', true)
  testCase('[^a-c]', 'e', true)
  testCase('[^a-c]', 'a', false)
  testCase('[^a-c]', 'b', false)
  testCase('[^a-c]', 'c', false)
  testCase('h\\?llo', 'h?llo', true)
  testCase('h\\?llo', 'hallo', false)
  testCase('h?llo', 'hello', true)
  testCase('h?llo', 'hallo', true)
  testCase('h?llo', 'halloo', false)
  testCase('h?llo', 'hall', false)
  testCase('h?llo', 'allo', false)
  testCase('h?llo', 'hhallo', false)
  testCase('h??lo', 'hello', true)
  testCase('h??lo', 'hamlo', true)
  testCase('h??lo', 'hamloo', false)
  testCase('foo/*/*', 'foo//', true)
  testCase('foo/*/*', 'foo/bar/', true)
  testCase('foo/*/*', 'foo//bar', true)
  testCase('foo/*/*', 'foo/bar/baz', true)
  testCase('foo/*/*', 'foo/bar/baz/qux', true)
  testCase('foo/*/*', 'foo/', false)
  testCase('foo/*/*', 'foo/bar', false)
  testCase('foo/?*/*', 'foo//', false)
  testCase('foo/?*/*', 'foo/a/', true)
  testCase('foo/?*/*', 'foo/ab/', true)
})
