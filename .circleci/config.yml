version: 2
jobs:
  build:
    docker:
      - image: circleci/node:8.12.0
    # To support coverage reports from forks
    environment:
      CODECLIMATE_REPO_TOKEN: 688d3234f9bb133fe6efa4dfe74f7a7510f2d9c1dca419875de8257a5f02da45
      COVERALLS_REPO_TOKEN: uXjaiJ9eS9qZ22QdYHeiqwrsQi9aOWJbz
      FORCE_COLOR: true

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            - v1-dependencies-

      # --frozen-lockfile ensures yarn.lockfile isn't accidentally outdated compared to package.json
      - run: yarn install --no-progress --frozen-lockfile

      # ESLint, with transform cache enabled
      - run: yarn lint --cache

      # Running the testing suite with coverage enabled doubles as
      # npx -p node-bin@latest -- yarn test
      - run: yarn coverage

      # Allows browsing the html coverage report generated by nyc
      - store_artifacts:
          path: ./coverage/lcov-report

      # test matrix, start with most recent versions of node and walk backwards
      - run: npx -p node-bin@7 -- yarn test

      - run: npx -p node-bin@6 -- yarn test

      #- run: npx -p node-bin@5 -- yarn test

      #- run: npx -p node-bin@4 -- yarn test

      #- run: npx -p node-bin@0.12 -p npm@3 -- npm test

      # yarn itself only supports v4 and later
      #- run: npx -p node-bin@0.11 -p npm@2 -- npm test

      # Let the CI know we got test results it can parse
      - store_test_results:
          path: ./junit

      # Easy debug junit xml files by storing them in the build
      - store_artifacts:
          path: ./junit

      # Make sure we don't get any surprises later when we try to publish a release
      - run: yarn prepublishOnly

      # Wait with saving deps cache until all tests pass
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}

      # Semantic release is setup to check on its own when to publish a new release or not
      - run: npx semantic-release
